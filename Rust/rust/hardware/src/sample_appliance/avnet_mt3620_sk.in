/// Azure Sphere Hardware Definition for Sample hardware abstraction for Avnet MT3620 SK
/* Copyright (c) Avnet Incorporated. All rights reserved.
   Licensed under the MIT License. */

// This file defines the mapping from the Avnet MT3620 Starter Kit (SK) to the
// 'sample appliance' abstraction used by the samples at https://github.com/Azure/azure-sphere-samples.
// Some peripherals are on-board on the Avnet MT3620 SK, while other peripherals must be attached externally if needed.
// See https://aka.ms/AzureSphereHardwareDefinitions for more information on how to use hardware abstractions,
// to enable apps to work across multiple hardware variants.


use crate::mt3620;

use crate::azure_sphere_hardware;

/// MT3620 SK: User Button A.
pub const SAMPLE_BUTTON_1:u32 = azure_sphere_hardware::AVNET_MT3620_SK_USER_BUTTON_A;

/// MT3620 SK: User Button B.
pub const SAMPLE_BUTTON_2:u32 = azure_sphere_hardware::AVNET_MT3620_SK_USER_BUTTON_B;

/// MT3620 SK: PWM LED controller
pub const SAMPLE_LED_PWM_CONTROLLER:u32 = azure_sphere_hardware::AVNET_MT3620_SK_PWM_CONTROLLER2;

/// MT3620 SK: Channel 1 for the PWM LED1 green. In the app manifest, it is only necessary to request the capability for the PWM Controller, SAMPLE_LED_PWM_CONTROLLER.
pub const SAMPLE_LED_PWM_CHANNEL:u32 = mt3620::MT3620_PWM_CHANNEL1;

/// MT3620 SK: User LED.
pub const SAMPLE_LED:u32 = azure_sphere_hardware::AVNET_MT3620_SK_USER_LED_RED;

/// MT3620 SK: ADC Potentiometer controller
pub const SAMPLE_POTENTIOMETER_ADC_CONTROLLER:u32 = azure_sphere_hardware::AVNET_MT3620_SK_ADC_CONTROLLER0;

/// MT3620 SK: Connect external potentiometer to ADC controller 0, channel 1 using CLICK1 AN. In the app manifest, it is only necessary to request the capability for the ADC Group Controller, SAMPLE_POTENTIOMETER_ADC_CONTROLLER.
pub const SAMPLE_POTENTIOMETER_ADC_CHANNEL:u32 = mt3620::MT3620_ADC_CHANNEL1;

/// MT3620 SK: User LED RED Channel.
pub const SAMPLE_RGBLED_RED:u32 = azure_sphere_hardware::AVNET_MT3620_SK_USER_LED_RED;

/// MT3620 SK: User LED GREEN Channel.
pub const SAMPLE_RGBLED_GREEN:u32 = azure_sphere_hardware::AVNET_MT3620_SK_USER_LED_GREEN;

/// MT3620 SK: User LED BLUE Channel.
pub const SAMPLE_RGBLED_BLUE:u32 = azure_sphere_hardware::AVNET_MT3620_SK_USER_LED_BLUE;

/// MT3620 SK: Connect CLICK1 RX (RX) to CLICK1 TX (TX).
pub const SAMPLE_UART_LOOPBACK:u32 = azure_sphere_hardware::AVNET_MT3620_SK_ISU0_UART;

/// MT3620 SK: Connect external LSM6DS3 to I2C using CLICK1, pin MISO (SDA) and pin MOSI (SCL).
pub const SAMPLE_LSM6DS3_I2C:u32 = azure_sphere_hardware::AVNET_MT3620_SK_ISU1_I2C;

/// MT3620 SK: Connect external LSM6DS3 to SPI using CLICK1, pin MISO (MISO), pin SCK (SCLK), pin MOSI (MOSI) and CLICK2 pin CS (CSB).
pub const SAMPLE_LSM6DS3_SPI:u32 = azure_sphere_hardware::AVNET_MT3620_SK_ISU1_SPI;

/// MT3620 SPI Chip Select (CS) value "B". This is not a peripheral identifier, and so has no meaning in an app manifest.
pub const SAMPLE_LSM6DS3_SPI_CS:i32 = mt3620::MT3620_SPI_CS_B;

/// MT3620 SK: Connect external NRF52 RESET signal using the PMOD connector: Pin-8.
pub const SAMPLE_NRF52_RESET:u32 = azure_sphere_hardware::AVNET_MT3620_SK_GPIO17;

/// MT3620 SK: Connect external NRF52 DFU signal using the PMOD connector: Pin-7
pub const SAMPLE_NRF52_DFU:u32 = azure_sphere_hardware::AVNET_MT3620_SK_GPIO2;

/// MT3620 SK: Connect external NRF52 UART using the PMOD connector): (RX Pin-3), (TX Pin-2), (CTS Pin-1), and (RTS Pin-4).
pub const SAMPLE_NRF52_UART:u32 = azure_sphere_hardware::AVNET_MT3620_SK_ISU0_UART;

/// MT3620 SK: Connect external red LED using CLICK1, pin PWM.
pub const SAMPLE_DEVICE_STATUS_LED:u32 = azure_sphere_hardware::AVNET_MT3620_SK_GPIO0;

/// MT3620 SK: Connect external blue LED using CLICK1, pin PWM2.
pub const SAMPLE_PENDING_UPDATE_LED:u32 = azure_sphere_hardware::AVNET_MT3620_SK_APP_STATUS_LED_YELLOW;

/// MT3620 SK: LSM6DSO accelerometer.
pub const SAMPLE_LSM6DSO_I2C:u32 = azure_sphere_hardware::AVNET_MT3620_SK_ISU2_I2C;

